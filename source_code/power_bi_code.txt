//Current dimensions: (774, 706)

function Scaler(from, key, dir, pad, tr) {
    var as_array = [];
    for (var i = 0; i < from.length; i++) {as_array.push(tr(from[i][key]));}
  	if (dir == 'y'){
		return d3.scale.linear().domain([Math.min.apply(null, as_array), Math.max.apply(null, as_array)]).range([height-pad,pad]);
    } else {
        return d3.scale.linear().domain([Math.min.apply(null, as_array), Math.max.apply(null, as_array)]).range([pad,width-pad]);
    }
}

function invScaler(from, key, dir, pad, tr) {
    var as_array = [];
    for (var i = 0; i < from.length; i++) {as_array.push(tr(from[i][key]));}
  	if (dir == 'y'){
		return d3.scale.linear().domain([height-pad,pad]).range([Math.min.apply(null, as_array), Math.max.apply(null, as_array)]).range([Math.min.apply(null, as_array), Math.max.apply(null, as_array)]);
    } else {
        return d3.scale.linear().domain([pad,width-pad]).range([Math.min.apply(null, as_array), Math.max.apply(null, as_array)]);
    }
}

function regression(data, x, y, xTr, yTr, regTr) {
  	d3.select('#chart').selectAll('line').remove();
  	d3.select('#chart').selectAll('circle').remove();
  	d3.select('#chart').selectAll('.sel').remove();
  	d3.select('#chart').selectAll('.tickTX').remove();
  	d3.select('#chart').selectAll('.tickTY').remove();
  	d3.select('#chart').selectAll('.textrm').remove();
 
  	var colKey = {
		'id': 'ID',
  		'income': 'Income',//
  		'days_since_last_purchase': 'Days since last purchase',//
  		'num_kids': 'Number of kids',
      	'mntfishproducts': 'Fish products',//
      	'acceptedcmp1': 'Accepted 1st campaign',
      	'acceptedcmp2': 'Accepted 2nd campaign',
      	'acceptedcmp3': 'Accepted 3rd campaign',
      	'acceptedcmp4': 'Accepted 4th campaign',
      	'dt_customer': 'Customer enrollment date',
      	'education': 'Education',
      	'marital_status': 'Marital status',
      	'mntfruits': 'Fruit products',
      	'mntgoldprods': 'Gold products',//
      	'mntmeatproducts': 'Meat products',//
      	'mntsweetproducts': 'Sweet products',//
      	'num_catalog_purchases': 'Catalog purchases',
      	'num_complaints': 'Number of complaints',
      	'num_deals_purchases': 'Discount purchsaes',
      	'num_store_purchases': 'Store purchases',
      	'num_teens': 'Teenagers in household',
      	'num_web_purchases': 'Number of web purchases',
      	'numwebvisitsmonth': 'Monthly web visits',
      	'response': 'Accepted last campaign',
      	'wine_purchased': 'Wine purchased',//
      	'year_birth': 'Year of birth',//
	};
    var j = [];
    for (var k = 0; k < data.length; k++) {if (((data[k][x] > 0) && (data[k][y] > 0)) && ((data[k][x] <= 120000) && (data[k][y] <= 120000))) {j.push(data[k]);}}
	var xS = [];
    var yS = [];
  	var pad = 110;
	//d3.select('#chart').selectAll('.xB').data([1]).enter().append('rect').attr('x', 50).attr('y', 50).attr('width', 10).attr('height', 10).attr('fill', 'gray').attr('class', 'xB');
 
  	d3.select('#chart').selectAll('.gridX').data([1, 2, 3, 4, 5, 6, 7, 8, 9]).enter().append('line').attr('x1', function(d) {return pad + 0.1*d*(width - 2*pad);}).attr('x2', function(d) {return pad + 0.1*d*(width - 2*pad);}).attr('y1', height - pad).attr('y2', pad).attr('stroke', 'gray').style('stroke-width', 1).attr('class', 'gridX').attr('opacity', 0.5);
	d3.select('#chart').selectAll('.gridY').data([1, 2, 3, 4, 5, 6, 7, 8, 9]).enter().append('line').attr('x1', pad).attr('x2', width - pad).attr('y1', function(d) {return height - (pad + 0.1*d*(height - 2*pad));}).attr('y2', function(d) {return height - (pad + 0.1*d*(height - 2*pad));}).attr('stroke', 'gray').style('stroke-width', 1).attr('class', 'gridY').attr('opacity', 0.5);
  	for (var k = 0; k < j.length; k++) {
      xS.push(j[k][x]*1);
      yS.push(regTr[0](j[k][y]*1));
    }
	d3.select('#chart').selectAll('.data_points').data(j).enter().append('circle').attr('r', 5).attr('cx', function(d) {return Scaler(j, x, 'x', pad, xTr[0])(xTr[0](d[x]));}).attr('cy', function(d) {return Scaler(j, y, 'y', pad, yTr[0])(yTr[0](d[y]));}).attr('fill', 'darkred').attr('opacity', 0.2).attr('class', 'data_points').attr('id', function(d) {return 'i' + d['id'];})
  	.on('mouseover', function() {d3.select('#chart').selectAll('.sel').remove();
                                 d3.select('#chart').append('circle').attr('class', 'sel').attr('opacity', 1).attr('fill', 'red').attr('r', 8).attr('cx', d3.select(this).attr('cx')).attr('cy', d3.select(this).attr('cy'));
                                 d3.select('#chart').append('rect').attr('class', 'sel').attr('x', d3.select(this).attr('cx') - 90).attr('y', d3.select(this).attr('cy') - 60).attr('width', 65).attr('height', 50).attr('fill', 'orange').attr('opacity', 0.6);
                                 d3.select('#chart').append('text').attr('class', 'sel').attr('opacity', 0.6).attr('x', d3.select(this).attr('cx') - 85).attr('y', d3.select(this).attr('cy') - 45).text('ID: ' + d3.select(this).attr('id').slice(1)).attr('font-size', 10).attr('font-family', 'Tahoma');
                                 d3.select('#chart').append('text').attr('class', 'sel').attr('opacity', 0.6).attr('x', d3.select(this).attr('cx') - 85).attr('y', d3.select(this).attr('cy') - 35).text('X: ' + xTr[1](invScaler(j, x, 'x', pad, xTr[0])(d3.select(this).attr('cx'))).toFixed(1)).attr('font-size', 10).attr('font-family', 'Tahoma');
                                 d3.select('#chart').append('text').attr('class', 'sel').attr('opacity', 0.6).attr('x', d3.select(this).attr('cx') - 85).attr('y', d3.select(this).attr('cy') - 25).text('Y: ' + yTr[1](invScaler(j, y, 'y', pad, yTr[0])(d3.select(this).attr('cy'))).toFixed(1)).attr('font-size', 10).attr('font-family', 'Tahoma');
                                 });
  	var xM = 0;
    for (var i = 0; i < xS.length; i++) {
        xM = xM + xS[i];
    }
    xM = xM/xS.length;
  	
  	var yM = 0;
    for (var i = 0; i < yS.length; i++) {
        yM = yM + yS[i];
    }
    yM = yM/yS.length;
	
  	var xySum = 0;
  	for (var i = 0; i < xS.length; i++) {
        xySum = xySum + (xS[i] - xM)*(yS[i] - yM);
    }

  	var xxSum = 0;
  	for (var i = 0; i < xS.length; i++) {
        xxSum = xxSum + (xS[i] - xM)*(xS[i] - xM);
    }

  	var b1 = xySum/xxSum;
  	var b0 = yM - b1*xM;
  	//var b3 = Scaler(j, x, 'x', pad, xTr[0])(xTr[0](d[x]));
 	
  	var yVal = (b0 + xTr[1](invScaler(j, x, 'x', pad, xTr[0])(pad))*b1);
	//var yVal = yM;
  	var xyArray = [[pad, Scaler(j, y, 'y', pad, yTr[0])(yTr[0](regTr[1](yVal)))]];
  
  	for (var i = 0; i < 5000; i++) {
      	var nextVal = xyArray[xyArray.length - 1][0] + (width - 2*pad)/5000;
      	yVal = (b0 + xTr[1](invScaler(j, x, 'x', pad, xTr[0])(nextVal))*b1);
        //yVal = yM;
      	var toPush = Scaler(j, y, 'y', pad, yTr[0])(yTr[0](regTr[1](yVal)));
      	if ((toPush > pad) && (toPush < height - pad)) {xyArray.push([nextVal, toPush]);} else {xyArray.push([nextVal, -100]);}
	}
    d3.select('#chart').selectAll('.fit').data(xyArray).enter().append('circle').attr('r', 1).attr('cx', function(d) {return d[0];}).attr('cy', function(d) {return d[1];}).attr('class', 'fit').attr('fill', 'blue');
	d3.select('#chart').append('line').attr('x1', pad).attr('x2', width - pad).attr('y1', height - pad).attr('y2', height - pad).attr('stroke', 'black');
  	d3.select('#chart').append('line').attr('x1', pad).attr('x2', pad).attr('y1', pad).attr('y2', height - pad).attr('stroke', 'black');
  	d3.select('#chart').append('text').text(colKey[x]).attr('font-family', 'Tahoma').attr('font-size', 10*width/774).attr('x', width - pad + 6).attr('y', height - pad + 22).style('text-anchor', 'end').attr('class', 'textrm');
   	d3.select('#chart').append('text').text(colKey[y]).attr('font-family', 'Tahoma').attr('font-size', 10*height/706).attr('x', pad).attr('y', pad - 5).style('text-anchor', 'middle').attr('class', 'textrm');
	d3.select('#chart').selectAll('.tickX').data([1, 2, 3, 4, 5, 6, 7, 8, 9]).enter().append('line').attr('x1', function(d) {return pad + 0.1*d*(width - 2*pad);}).attr('x2', function(d) {return pad + 0.1*d*(width - 2*pad);}).attr('y1', height - pad - 4).attr('y2', height - pad).attr('stroke', 'black').style('stroke-width', 1.5).attr('class', 'tickX');
	d3.select('#chart').selectAll('.tickY').data([1, 2, 3, 4, 5, 6, 7, 8, 9]).enter().append('line').attr('x1', pad).attr('x2', pad + 4).attr('y1', function(d) {return height - (pad + 0.1*d*(height - 2*pad));}).attr('y2', function(d) {return height - (pad + 0.1*d*(height - 2*pad));}).attr('stroke', 'black').style('stroke-width', 1.5).attr('class', 'tickY');
  	d3.select('#chart').selectAll('.tickTX').data([1, 2, 3, 4, 5, 6, 7, 8, 9]).enter().append('text').attr('x', function(d) {return pad + 0.1*d*(width - 2*pad);}).attr('y', height - pad + 9 + (height - 706)/50).text(function(d) {return (xTr[1](invScaler(j, x, 'x', pad, xTr[0])(pad + 0.1*d*(width - 2*pad)))).toFixed(0);}).attr('font-family', 'Tahoma').attr('font-size', 8*width/774).style('text-anchor', 'middle').attr('class', 'tickTX');
	d3.select('#chart').selectAll('.tickTY').data([1, 2, 3, 4, 5, 6, 7, 8, 9]).enter().append('text').attr('x', pad - 9).attr('y', function(d) {return height - (pad + 0.1*d*(height - 2*pad)) + 3;}).text(function(d) {return (yTr[1](invScaler(j, y, 'y', pad, yTr[0])(height - (pad + 0.1*d*(height - 2*pad)) + 3))).toFixed(0);}).attr('font-family', 'Tahoma').attr('font-size', 8*height/706).style('text-anchor', 'end').attr('class', 'tickTY');
    d3.select('#chart').append('text').text(colKey[x] + ' vs. ' + colKey[y]).attr('x', width/2).attr('y', 5*pad/12).attr('font-family', 'Verdana').attr('font-size', 16*width/774).style('text-anchor', 'middle').attr('class', 'textrm');
	return 1;
}


function getMinMax(obj, key) {
    var as_array = [];
    for (var i = 0; i < obj.length; i++) {if ((obj[i][key] > 0) && (obj[i][key] <= 120000)) {as_array.push(obj[i][key]);}}
	return [Math.min.apply(null, as_array), Math.max.apply(null, as_array)];
}


pbi.dsv(function(i) {
	d3.select('#chart').append('rect').attr('x', 0).attr('y', 0).attr('width', width).attr('height', height).attr('fill', 'black').attr('opacity', 0).attr('class', 'ghost').on('mouseover', function() {d3.select('#chart').selectAll('.sel').remove();});
  	var pad = 110;
    var xCol = 'income';
    var yCol = 'wine_purchased';
  	var xTr = [function(i) {return Math.pow(i, 1);}, function(i) {return Math.pow(i, 1);}];
    var yTr = [function(i) {return Math.pow(i, 1);}, function(i) {return Math.pow(i, 1);}];
    var regTr = [function(i) {return Math.log(i + 1);}, function(i) {return Math.exp(i) - 1;}];
    var transformations = {'No transformation': [function(i) {return i;}, function(i) {return i;}],
                           'Square root': [function(i) {return Math.pow(i, 1/2);}, function(i) {return Math.pow(i, 2);}],
                           'Cube root': [function(i) {return Math.pow(i, 1/3);}, function(i) {return Math.pow(i, 3);}],
                           'Logarithm': [function(i) {return Math.log(i);}, function(i) {return Math.exp(i);}],
                           //'Logarithm': [function(i) {return Math.pow(i+1, 1/1000001);}, function(i) {return Math.pow(i, 1000001)-1;}],
                           'Square': [function(i) {return Math.pow(i, 2);}, function(i) {return Math.pow(i, 1/2);}],
                           'Cube': [function(i) {return Math.pow(i, 3);}, function(i) {return Math.pow(i, 1/3);}],
                           'Exponent': [function(i) {return Math.exp(i) - 1;}, function(i) {return Math.log(i + 1);}],
                           };
    regression(i, xCol, yCol, xTr, yTr, regTr);
	d3.select('#chart').selectAll('.xBT').data([[0, 'Income'], [1, 'Recency'], [2, 'Fish products'], [3, 'Gold products'], [4, 'Meat products'], [5, 'Sweet products'], [6, 'Wine products'], [7, 'Year of birth']])
                                         .enter().append('text').attr('x', 0).attr('y', 0).text(function(d) {return d[1];}).attr('font-family', 'Tahoma').attr('font-size', 10*width/774).style('text-anchor', 'middle').attr('class', 'xBT').attr('transform', function(d) {return 'translate(' + (pad + (1/2)*(width - pad*2)/12.9 + (12/7)*d[0]*(width - pad*2)/12.9 + (width - 774)/50) + ', ' + (height - 2*pad/3 + 10 + 7.5 + (height - 706)/50) + ') rotate(0)';}).attr('id', function(d) {return d3.select(this).attr('class') + d[1].slice(0,2);});
  	d3.select('#chart').selectAll('.xB').data([[0, 'income'], [1, 'days_since_last_purchase'], [2, 'mntfishproducts'], [3, 'mntgoldprods'], [4, 'mntmeatproducts'], [5, 'mntsweetproducts'], [6, 'wine_purchased'], [7, 'year_birth']]).enter().append('rect').attr('x', function(d) {return pad - 15 + (12/7)*d[0]*(width - pad*2)/12.9;}).attr('y', height - 2*pad/3).attr('width', (width - pad*2)/7.8).attr('height', 30).attr('fill', 'black').attr('class', 'xB').attr('opacity', 0.35).attr('id', function(d) {return d3.select(this).attr('class') + d[1].slice(0,2);})
                                        .on('click', function(d) {d3.selectAll('.xB').attr('fill', 'black'); d3.select(this).attr('fill', 'darkblue'); xCol = d[1]; return regression(i, xCol, yCol, xTr, yTr, regTr);});
	d3.select('#chart').selectAll('.yBT').data([[7, 'Income'], [6, 'Recency'], [5, 'Fish products'], [4, 'Gold products'], [3, 'Meat products'], [2, 'Sweet products'], [1, 'Wine products'], [0, 'Year of birth']])
                                         .enter().append('text').attr('x', 0).attr('y', 0).text(function(d) {return d[1];}).attr('font-family', 'Tahoma').attr('font-size', 8*height/706).style('text-anchor', 'middle').attr('class', 'yBT').style('anchor', 'middle').attr('transform', function(d) {return 'translate(' + (pad/2 + 10 - 7.5) + ',' + (pad + (1/2)*(height - pad*2)/12.9 + (12/7)*d[0]*(height - pad*2)/12.9 + 15 - 3 + (height - 706)/50) + ') rotate(-90)';}).attr('id', function(d) {return d3.select(this).attr('class') + d[1].slice(0,2);});
  	d3.select('#chart').selectAll('.yB').data([[7, 'income'], [6, 'days_since_last_purchase'], [5, 'mntfishproducts'], [4, 'mntgoldprods'], [3, 'mntmeatproducts'], [2, 'mntsweetproducts'], [1, 'wine_purchased'], [0, 'year_birth']]).enter().append('rect').attr('y', function(d) {return pad + (12/7)*d[0]*(height - pad*2)/12.9;}).attr('x', pad/2 - 15).attr('height', (height - pad*2)/7.8).attr('width', 30).attr('fill', 'black').attr('class', 'yB').attr('opacity', 0.35).attr('id', function(d) {return d3.select(this).attr('class') + d[1].slice(0,2);})
                                        .on('click', function(d) {d3.selectAll('.yB').attr('fill', 'black'); d3.select(this).attr('fill', 'darkblue'); yCol = d[1]; return regression(i, xCol, yCol, xTr, yTr, regTr);});
  	
  	d3.select('#chart').selectAll('.xtBT').data([[0, 'No transformation'], [2, 'Square root'], [4, 'Cube root'], [6, 'Logarithm']])
                                         .enter().append('text').attr('x', 0).attr('y', 0).text(function(d) {return d[1];}).attr('font-family', 'Tahoma').attr('font-size', 12*width/774).style('text-anchor', 'middle').attr('class', 'xtBT').attr('transform', function(d) {return 'translate(' + (pad + (19/14)*(width - pad*2)/12.9 +(12/7)*d[0]*(width - pad*2)/12.9) + ', ' + (height + 2 - (pad/2 - 10 - 22.5)*(1.5*706 + -0.5*height)/706) + ') rotate(0)';}).attr('id', function(d) {return d3.select(this).attr('class') + d[1].slice(0,2);});
  	d3.select('#chart').selectAll('.xtB').data([[0, 'No transformation'], [2, 'Square root'], [4, 'Cube root'], [6, 'Logarithm']]).enter().append('rect').attr('x', function(d) {return pad + (12/7)*d[0]*(width - pad*2)/12.9;}).attr('y', height - pad/2 + 15).attr('width', (19/7)*(width - pad*2)/12.9).attr('height', 30).attr('fill', 'grey').attr('class', 'xtB').attr('opacity', 0.35).attr('id', function(d) {return d3.select(this).attr('class') + d[1].slice(0,2);})
                                         .on('click', function(d) {d3.selectAll('.xtB').attr('fill', 'grey'); d3.select(this).attr('fill', 'darkblue'); xTr = transformations[d[1]]; return regression(i, xCol, yCol, xTr, yTr, regTr);});
	d3.select('#chart').selectAll('.ytBT').data([[6, 'No transformation'], [4, 'Square root'], [2, 'Cube root'], [0, 'Logarithm']])
                                         .enter().append('text').attr('x', 0).attr('y', 0).text(function(d) {return d[1];}).attr('font-family', 'Tahoma').attr('font-size', 12*height/706).style('text-anchor', 'middle').attr('class', 'ytBT').style('anchor', 'middle').attr('transform', function(d) {return 'translate(' + ((pad/3 + 10 - 22.5)*(.9*774 + .1*width)/774) + ',' + (pad + (19/14)*(height - pad*2)/12.9 + (12/7)*d[0]*(height - pad*2)/12.9 + 15) + ') rotate(-90)';}).attr('id', function(d) {return d3.select(this).attr('class') + d[1].slice(0,2);});
  	d3.select('#chart').selectAll('.ytB').data([[6, 'No transformation'], [4, 'Square root'], [2, 'Cube root'], [0, 'Logarithm']]).enter().append('rect').attr('y', function(d) {return pad + (12/7)*d[0]*(height - pad*2)/12.9 + 15;}).attr('x', pad/3 - 30).attr('height', (19/7)*(height - pad*2)/12.9).attr('width', 30).attr('fill', 'grey').attr('class', 'ytB').attr('opacity', 0.35).attr('id', function(d) {return d3.select(this).attr('class') + d[1].slice(0,2);})
                                         .on('click', function(d) {d3.selectAll('.ytB').attr('fill', 'grey'); d3.select(this).attr('fill', 'darkblue'); yTr = transformations[d[1]]; return regression(i, xCol, yCol, xTr, yTr, regTr);});

  	d3.select('#chart').selectAll('.regtBT').data([[1, 'Y ~ aX + B'], [2, 'Y ~ (aX + B)^2'], [3, 'Y ~ (aX + B)^3'], [4, 'Y ~ e^(aX + B)'], [5, 'Y ~ sqrt(aX + B)'], [6, 'Y ~ cbrt(aX + B)']])
                                         .enter().append('text').attr('x', 0).attr('y', 0).text(function(d) {return d[1];}).attr('font-family', 'Tahoma').attr('font-size', 8*width/774).style('text-anchor', 'middle').attr('class', 'regtBT').attr('transform', function(d) {return 'translate(' + (pad + (1/2)*(width - pad*2)/12.9 +(12/7)*d[0]*(width - pad*2)/12.9 + (width - 774)/50) + ', ' + (2*pad/3 + 10 - 7.5 + (height - 706)/50) + ') rotate(0)';});
  	d3.select('#chart').selectAll('.regtB').data([[1, 'No transformation'], [2, 'Square root'], [3, 'Cube root'], [4, 'Logarithm'], [5, 'Square'], [6, 'Cube']]).enter().append('rect').attr('x', function(d) {return pad - 15 + (12/7)*d[0]*(width - pad*2)/12.9;}).attr('y', 2*pad/3 - 15).attr('width', (width - pad*2)/7.8).attr('height', 30).attr('fill', 'black').attr('class', 'regtB').attr('opacity', 0.35).attr('id', function(d) {return d3.select(this).attr('class') + d[1].slice(0,2);})
                                         .on('click', function(d) {d3.selectAll('.regtB').attr('fill', 'black'); d3.select(this).attr('fill', 'darkblue'); regTr = transformations[d[1]]; return regression(i, xCol, yCol, xTr, yTr, regTr);});
	
  	d3.select('#xBin').attr('fill', 'darkblue');
  	d3.select('#yBwi').attr('fill', 'darkblue');
  	d3.select('#xtBNo').attr('fill', 'darkblue');
  	d3.select('#ytBNo').attr('fill', 'darkblue');
    d3.select('#regtBLo').attr('fill', 'darkblue');

	});

//work out how reg trans and axis trans relate, make tick text follow tr
//add text that says 'x' vs. 'y'

//maybe make stuff scale correctly